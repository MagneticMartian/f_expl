#!/bin/bash

# This is a simple File Explore script. It allows you
# to interactively traverse the directory tree of your
# system, and then select files to either read, write,
# or execute

# We are going to do a little black magic later
shopt -s expand_aliases

# Display for the types of permissions
file_activity(){
    echo Read
    echo Write
    echo View Image
    echo View PDF
    echo Watch Video
    echo Execute
    echo Delete
}

# If the user has a different editor set in their ENV then
# this selector will use that instead of vim
edit_select(){
    if [ -z $EDITOR ]
    then
        [ -$1 $2 ] && vim $2 || echo "No $3 Permissions"
    else
        [ -$1 $2 ] && ls $2 | xargs -r -o $EDITOR ||\
        echo "No $3 Permissions"     
    fi
}

# Ask the user where to start
echo -n "Root of the tree: "
read -r base

# fzf does not play nice with ~
if [ $base == "~" ]
then
    base_dir=$HOME
elif [[ $base = ~* ]]
then
    base_dir=$HOME/${base#~*}
else
    base_dir=${base}
fi

# Black Magic
if [ ! -d ${base_dir} ]
then
    # Now you see me
    alias goto="cat > /dev/null <<"
    new_dir=${base_dir}
else
    alias goto="#"
fi
# Now You don't
goto "#GOTO"
# END Black Magic

new_dir=${base_dir}/$(ls -a ${base_dir} | fzf --reverse)

# As long as directories are being selected continue in the env
while [ -d ${new_dir} ]
do
    next_dir=$(ls -a ${new_dir} | fzf --reverse)
    # Need a way to gracefully exit the script
    [ -z ${next_dir} ] && echo "No Directory choosen" && exit 1
    new_dir=${new_dir}/${next_dir}
done

# Black Magic Call
#GOTO

# User desides what they want to do with the file
result=$(file_activity | fzf --reverse)

case $result in
"Read")
        # Can user read the file? If so, it will open.
        edit_select "r" ${new_dir} "read"
        ;;
"Write")
        # Can user write the file? If so, it will open.
        edit_select "w" ${new_dir} "write"
        ;;
"View Image")
        # What kind of picture you trying to look at
        [ -r ${new_dir} ] && sxiv ${new_dir} || echo "Unable to open Picture"
        ;;
"View PDF")
        # Look at you exercising your brain
        [ -r ${new_dir} ] && epdfview ${new_dir} || echo "Unable to open PDF"
        ;;
"Watch Video")
        # Ok pics are one thing but this is a Christian Server Sir
        list=$(ls ${new_dir} | awk '/list/ {print "videos.list"}' )
        if [ ${list} == "videos.list" ]
        then
            vid=$(awk '{print}' ${new_dir} | fzf --reverse)
            [ -r ${new_dir} ] && mpv ${vid} || echo "Unable to play Video"
        else
            [ -r ${new_dir} ] && mpv ${new_dir} || echo "Unable to play Video"
        fi
        ;;
"Execute")
        # If user can exec the file the script will inform them and
        # give them the relevant path to the file. Otherwise it will
        # simply inform them they can not exec.
        [ -x ${new_dir} ] && echo "You have permission" && echo ${new_dir} ||\
         echo "You do not have permission"
        ;;
"Delete")
        # Sometimes you just want to start over fresh.
        rm -i ${new_dir}
        ;;
*)
        # Quit playing around
        echo "No proper value given"
        exit 1
esac

# Remove the junk from the screen
clear
